{
	"id": "a3f44b7c1322f38e201537ae19211330",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"CreateWallet/proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract Proxy {\r\n    \r\n    address public implementation;\r\n\r\n    constructor(address _implementation) {\r\n        implementation = _implementation;\r\n    }\r\n\r\n    fallback() external  {\r\n        address _impl = implementation;\r\n        assembly {\r\n            // Copy call data to memory\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Delegatecall to the implementation contract\r\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data to memory\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    function set_implementation(address _implementation) public {\r\n        implementation = _implementation;\r\n    }\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"CreateWallet/proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "set_implementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CreateWallet/proxy.sol\":61:913  contract Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"CreateWallet/proxy.sol\":127:215  constructor(address _implementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CreateWallet/proxy.sol\":175:189  implementation */\n  0x00\n    /* \"CreateWallet/proxy.sol\":175:207  implementation = _implementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"CreateWallet/proxy.sol\":61:913  contract Proxy {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"CreateWallet/proxy.sol\":61:913  contract Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CreateWallet/proxy.sol\":61:913  contract Proxy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4cd69da0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"CreateWallet/proxy.sol\":255:268  address _impl */\n      0x00\n        /* \"CreateWallet/proxy.sol\":271:285  implementation */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"CreateWallet/proxy.sol\":380:394  calldatasize() */\n      calldatasize\n      swap1\n        /* \"CreateWallet/proxy.sol\":255:268  address _impl */\n      dup1\n        /* \"CreateWallet/proxy.sol\":361:395  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"CreateWallet/proxy.sol\":534:535  0 */\n      0x00\n        /* \"CreateWallet/proxy.sol\":531:532  0 */\n      dup1\n        /* \"CreateWallet/proxy.sol\":515:529  calldatasize() */\n      calldatasize\n        /* \"CreateWallet/proxy.sol\":512:513  0 */\n      0x00\n        /* \"CreateWallet/proxy.sol\":505:510  _impl */\n      dup5\n        /* \"CreateWallet/proxy.sol\":498:503  gas() */\n      gas\n        /* \"CreateWallet/proxy.sol\":485:536  delegatecall(gas(), _impl, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"CreateWallet/proxy.sol\":622:638  returndatasize() */\n      returndatasize\n        /* \"CreateWallet/proxy.sol\":619:620  0 */\n      0x00\n        /* \"CreateWallet/proxy.sol\":616:617  0 */\n      dup1\n        /* \"CreateWallet/proxy.sol\":601:639  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"CreateWallet/proxy.sol\":662:668  result */\n      dup1\n        /* \"CreateWallet/proxy.sol\":682:720  case 0 { revert(0, returndatasize()) } */\n      dup1\n      iszero\n      tag_9\n      jumpi\n        /* \"CreateWallet/proxy.sol\":754:770  returndatasize() */\n      returndatasize\n        /* \"CreateWallet/proxy.sol\":751:752  0 */\n      0x00\n        /* \"CreateWallet/proxy.sol\":744:771  return(0, returndatasize()) */\n      return\n        /* \"CreateWallet/proxy.sol\":682:720  case 0 { revert(0, returndatasize()) } */\n    tag_9:\n        /* \"CreateWallet/proxy.sol\":701:717  returndatasize() */\n      returndatasize\n        /* \"CreateWallet/proxy.sol\":698:699  0 */\n      0x00\n        /* \"CreateWallet/proxy.sol\":691:718  revert(0, returndatasize()) */\n      revert\n        /* \"CreateWallet/proxy.sol\":655:773  switch result... */\n    tag_8:\n      stop\n        /* \"CreateWallet/proxy.sol\":799:910  function set_implementation(address _implementation) public {... */\n    tag_4:\n      tag_8\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"CreateWallet/proxy.sol\":870:884  implementation */\n      0x00\n        /* \"CreateWallet/proxy.sol\":870:902  implementation = _implementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"CreateWallet/proxy.sol\":799:910  function set_implementation(address _implementation) public {... */\n      jump\n        /* \"CreateWallet/proxy.sol\":89:118  address public implementation */\n    tag_5:\n      sload(0x00)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"CreateWallet/proxy.sol\":89:118  address public implementation */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"#utility.yul\":14:300   */\n    tag_12:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_21:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_22:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004c02667e4f9be1f165246d57791c8fb0a31b020d1488a4f21e12a25277fdfd364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101b63803806101b683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610123806100936000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80634cd69da01460645780635c60da1b146091575b600080546001600160a01b03169036908037600080366000845af43d6000803e808015605d573d6000f35b3d6000fd5b005b6062606f36600460bf565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60005460a3906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60006020828403121560d057600080fd5b81356001600160a01b038116811460e657600080fd5b939250505056fea264697066735822122004c02667e4f9be1f165246d57791c8fb0a31b020d1488a4f21e12a25277fdfd364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B6 CODESIZE SUB DUP1 PUSH2 0x1B6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x123 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CD69DA0 EQ PUSH1 0x64 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH1 0x91 JUMPI JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLDATASIZE SWAP1 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x5D JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x62 PUSH1 0x6F CALLDATASIZE PUSH1 0x4 PUSH1 0xBF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xC0 0x26 PUSH8 0xE4F9BE1F165246D5 PUSH24 0x91C8FB0A31B020D1488A4F21E12A25277FDFD364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "61:852:0:-:0;;;127:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;175:14;:32;;-1:-1:-1;;;;;;175:32:0;-1:-1:-1;;;;;175:32:0;;;;;;;;;;61:852;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;61:852:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@implementation_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@set_implementation_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:510:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80634cd69da01460645780635c60da1b146091575b600080546001600160a01b03169036908037600080366000845af43d6000803e808015605d573d6000f35b3d6000fd5b005b6062606f36600460bf565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60005460a3906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60006020828403121560d057600080fd5b81356001600160a01b038116811460e657600080fd5b939250505056fea264697066735822122004c02667e4f9be1f165246d57791c8fb0a31b020d1488a4f21e12a25277fdfd364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CD69DA0 EQ PUSH1 0x64 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH1 0x91 JUMPI JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLDATASIZE SWAP1 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x5D JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x62 PUSH1 0x6F CALLDATASIZE PUSH1 0x4 PUSH1 0xBF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xC0 0x26 PUSH8 0xE4F9BE1F165246D5 PUSH24 0x91C8FB0A31B020D1488A4F21E12A25277FDFD364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "61:852:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;255:13;271:14;;-1:-1:-1;;;;;271:14:0;;380;;255:13;361:34;534:1;531;515:14;512:1;505:5;498;485:51;622:16;619:1;616;601:38;662:6;682:38;;;;754:16;751:1;744:27;682:38;701:16;698:1;691:27;655:118;;799:111;;;;;;:::i;:::-;870:14;:32;;-1:-1:-1;;;;;;870:32:0;-1:-1:-1;;;;;870:32:0;;;;;;;;;;799:111;89:29;;;;;-1:-1:-1;;;;;89:29:0;;;;;;-1:-1:-1;;;;;469:32:1;;;451:51;;439:2;424:18;89:29:0;;;;;;;14:286:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "58200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"implementation()": "2325",
								"set_implementation(address)": "24502"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 127,
									"end": 215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 127,
									"end": 215,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 127,
									"end": 215,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 207,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 175,
									"end": 207,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 207,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 913,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004c02667e4f9be1f165246d57791c8fb0a31b020d1488a4f21e12a25277fdfd364736f6c63430008140033",
									".code": [
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "4CD69DA0"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 271,
											"end": 285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 271,
											"end": 285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 271,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 380,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 395,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 512,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 498,
											"end": 503,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 485,
											"end": 536,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 622,
											"end": 638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 639,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 662,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 682,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 751,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 771,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 682,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 717,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 773,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 799,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 799,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 799,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 799,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 799,
											"end": 910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 799,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 799,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 799,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 799,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 799,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 870,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 799,
											"end": 910,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 89,
											"end": 118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 118,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"CreateWallet/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"set_implementation(address)": "4cd69da0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"set_implementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CreateWallet/proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CreateWallet/proxy.sol\":{\"keccak256\":\"0x913d8b8e0bf9f8d24344339606854ee4d6e90e94335221e06ac52741b2a161d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ceadfc52d5ba4bdaecd375f15d020d93cf982c095967b2d7501c5c923faf4ee\",\"dweb:/ipfs/QmdbHCyxR4r342sGRa2M3b4x5PsLuCDoMBT3nbd63dU4fr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "CreateWallet/proxy.sol:Proxy",
								"label": "implementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CreateWallet/proxy.sol": {
				"ast": {
					"absolutePath": "CreateWallet/proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "Proxy",
							"nameLocation": "70:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 3,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "104:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "89:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "89:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "164:51:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "175:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "192:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "175:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "175:32:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "147:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "139:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:25:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:0:0"
									},
									"scope": 33,
									"src": "127:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "244:547:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "_impl",
														"nameLocation": "263:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 21,
														"src": "255:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 16,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "255:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"id": 18,
													"name": "implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "271:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "255:30:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "305:479:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "374:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "380:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "361:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "361:34:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "471:65:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "498:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "498:5:0"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "505:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "515:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "534:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "485:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:51:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "475:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "616:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "619:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "622:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "622:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "601:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "689:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "698:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "701:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "701:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "691:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "691:27:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "691:27:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "682:38:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "687:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "742:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "751:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "754:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "754:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "744:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "744:27:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "744:27:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "734:39:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "662:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "655:118:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "505:5:0",
														"valueSize": 1
													}
												],
												"id": 20,
												"nodeType": "InlineAssembly",
												"src": "296:488:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:0:0"
									},
									"scope": 33,
									"src": "223:568:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "859:51:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "870:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "887:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "870:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "870:32:0"
											}
										]
									},
									"functionSelector": "4cd69da0",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set_implementation",
									"nameLocation": "808:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "835:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "827:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:25:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:0:0"
									},
									"scope": 33,
									"src": "799:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "61:852:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:884:0"
				},
				"id": 0
			}
		}
	}
}